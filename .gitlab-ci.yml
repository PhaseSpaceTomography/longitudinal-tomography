include:
 - project: acc-co/devops/python/acc-py-gitlab-ci-templates
   file: v2/python.gitlab-ci.yml


variables:
  project_name: longitudinal_tomography
  PY_VERSION: "3.11"
  ACC_PY_BASE_IMAGE_TAG: "2023.06"

# ================ Build ==================

build_wheel:
  extends: .acc_py_build_wheel


build_sdist:
  extends: .acc_py_build_sdist


# ================ Test ==================
  

test_dev:
  extends: .acc_py_dev_test
  script:
    # Run the unit-tests with coverage output.
    - cd ${project_root}
    - python -m pytest ./unit_tests
      --cov=${project_name}
      --cov-report term
      --cov-report html:coverage-html
      --cov-report xml:coverage-report.xml
      --junitxml=junit-report.xml


test_wheel:
  extends: .acc_py_wheel_test
  needs:
    - build_wheel
  script:
    - mkdir -p ~/not-the-source-dir && cp -r ${project_root}/unit_tests ~/not-the-source-dir && cd ~/not-the-source-dir
    - python -m pytest ./unit_tests

pep8:
  # Checks for conformity to PEP8 style guidelines
  stage: test
  before_script:
    - python -m ensurepip
    - python -m pip install flake8
  script:
    - flake8 --count

  only:
    - merge_requests
  allow_failure: true


# ================ Deploy ==================


._build_docs:
  variables:
    SPHINX_BUILD_ADDOPTS: "-W --keep-going"  # Error if we have warnings in the doc build.
  needs:
    - build_wheel


build_docs:
 extends:
   - ._build_docs
   - .acc_py_build_docs


build_docs_on_tag:
 extends:
   - .acc_py_build_docs_on_tag


release_dist:
  extends: .acc_py_publish


release_dist_pypi:
  stage: deploy
  extends: .acc_py_publish
  script:  # override the default acc py publish script
    - shopt -s nullglob
    # upload to testpypi first for error checking
    - python -m twine upload --non-interactive -r testpypi --username __token__ --password $TWINE_TESTPYPI_PASSWORD ${project_root}/dist/*.whl ${project_root}/dist/*.tar.gz
    # upload to pypi
    - python -m twine upload --non-interactive --username $TWINE_USERNAME --password $TWINE_PYPI_PASSWORD ${project_root}/dist/*.whl ${project_root}/dist/*.tar.gz
