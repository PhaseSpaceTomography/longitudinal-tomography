image: continuumio/miniconda3:latest

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/opt/cache/pip"

cache:
  paths:
    - /opt/cache/pip

before_script:
  - apt-get update -q -y
  - apt-get install -y build-essential
  - conda env create -f .environment.yml
  - source activate tomo_env
  - python setup.py build_ext --inplace

tests:
  stage: test
  script:
    - source activate tomo_env
    - echo "Installing coverage"
    - pip install coverage coverage-badge pyyaml
    - pip install pylint
    - pylint --errors-only tomo
    - coverage run -m pytest -v unit_tests/*/test*.py
    - coverage report -m
    - coverage html
    - coverage-badge -o coverage.svg
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  artifacts:
    paths:
      - htmlcov/*
      - coverage.svg
    expire_in: 1 day

pep8:
  # Checks for conformity to PEP8 style guidelines
  stage: test
  script:
    - source activate tomo_env
    - pip install flake8
    - flake8 --count

  only:
    - merge_requests
  allow_failure: true

pages:
  stage: deploy
  dependencies:
    - tests
  script:
    - source activate tomo_env
    - mv htmlcov/ public/
    - pip install sphinx sphinxcontrib-napoleon sphinx-rtd-theme
    - cd __doc
    - make html
    - mv build/html ../public
  artifacts:
    paths:
      - public
    expire_in: 30 days
#  only:
#    - master

build-wheels:
  image: quay.io/pypa/manylinux2010_x86_64
  stage: deploy
  dependencies:
    - tests
  before_script: []
  script:
    - bash tools/build-wheels.sh
  variables:
    PLAT: manylinux2010_x86_64
  artifacts:
    expire_in: 7 days
    paths:
      - wheelhouse/longitudinal_tomography*.whl

pypi:
  stage: deploy
  dependencies:
    - build-wheels
  before_script: []
  script:
    - twine upload -r testpypi wheelhouse/longidutinal_tomography*.whl
